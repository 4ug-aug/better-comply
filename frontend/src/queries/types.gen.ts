// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: 'http://localhost' | (string & {});
};

/**
 * Body_login_for_access_token_auth_token_post
 */
export type BodyLoginForAccessTokenAuthTokenPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * CreateUserRequest
 */
export type CreateUserRequest = {
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * RefreshTokenRequest
 */
export type RefreshTokenRequest = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * Token
 */
export type Token = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type RegisterUserAuthRegisterPostData = {
    body: CreateUserRequest;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type RegisterUserAuthRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserAuthRegisterPostError = RegisterUserAuthRegisterPostErrors[keyof RegisterUserAuthRegisterPostErrors];

export type RegisterUserAuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type LoginForAccessTokenAuthTokenPostData = {
    body: BodyLoginForAccessTokenAuthTokenPost;
    path?: never;
    query?: never;
    url: '/auth/token';
};

export type LoginForAccessTokenAuthTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginForAccessTokenAuthTokenPostError = LoginForAccessTokenAuthTokenPostErrors[keyof LoginForAccessTokenAuthTokenPostErrors];

export type LoginForAccessTokenAuthTokenPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type LoginForAccessTokenAuthTokenPostResponse = LoginForAccessTokenAuthTokenPostResponses[keyof LoginForAccessTokenAuthTokenPostResponses];

export type RefreshAccessTokenAuthRefreshPostData = {
    body: RefreshTokenRequest;
    path?: never;
    query?: never;
    url: '/auth/refresh';
};

export type RefreshAccessTokenAuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshAccessTokenAuthRefreshPostError = RefreshAccessTokenAuthRefreshPostErrors[keyof RefreshAccessTokenAuthRefreshPostErrors];

export type RefreshAccessTokenAuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type RefreshAccessTokenAuthRefreshPostResponse = RefreshAccessTokenAuthRefreshPostResponses[keyof RefreshAccessTokenAuthRefreshPostResponses];

export type VerifyEmailAuthVerifyEmailGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Token
         *
         * The verification token
         */
        token: string;
    };
    url: '/auth/verify-email';
};

export type VerifyEmailAuthVerifyEmailGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyEmailAuthVerifyEmailGetError = VerifyEmailAuthVerifyEmailGetErrors[keyof VerifyEmailAuthVerifyEmailGetErrors];

export type VerifyEmailAuthVerifyEmailGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadUsersMeAuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/me';
};

export type ReadUsersMeAuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ProtectedEndpointProtectedGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/protected';
};

export type ProtectedEndpointProtectedGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AdminEndpointAdminGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin';
};

export type AdminEndpointAdminGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
