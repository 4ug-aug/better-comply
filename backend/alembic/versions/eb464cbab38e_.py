"""empty message

Revision ID: eb464cbab38e
Revises: 4ba56eb8dc40
Create Date: 2025-10-17 20:36:31.152229

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eb464cbab38e'
down_revision: Union[str, Sequence[str], None] = '4ba56eb8dc40'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_delivery_events_document_id'), table_name='delivery_events')
    op.drop_index(op.f('ix_delivery_events_id'), table_name='delivery_events')
    op.drop_index(op.f('ix_delivery_events_subscriber_id'), table_name='delivery_events')
    op.drop_index(op.f('ix_delivery_events_version_id'), table_name='delivery_events')
    op.drop_table('delivery_events')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('delivery_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subscriber_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('attempt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'SENT', 'DELIVERED', 'FAILED', 'RETRYING', name='deliverystatus'), autoincrement=False, nullable=True),
    sa.Column('response_meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('delivery_events_document_id_fkey')),
    sa.ForeignKeyConstraint(['version_id'], ['document_versions.id'], name=op.f('delivery_events_version_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('delivery_events_pkey'))
    )
    op.create_index(op.f('ix_delivery_events_version_id'), 'delivery_events', ['version_id'], unique=False)
    op.create_index(op.f('ix_delivery_events_subscriber_id'), 'delivery_events', ['subscriber_id'], unique=False)
    op.create_index(op.f('ix_delivery_events_id'), 'delivery_events', ['id'], unique=False)
    op.create_index(op.f('ix_delivery_events_document_id'), 'delivery_events', ['document_id'], unique=False)
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('celery_taskmeta_pkey')),
    sa.UniqueConstraint('task_id', name=op.f('celery_taskmeta_task_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('celery_tasksetmeta_pkey')),
    sa.UniqueConstraint('taskset_id', name=op.f('celery_tasksetmeta_taskset_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
